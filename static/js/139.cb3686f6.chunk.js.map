{"version":3,"file":"static/js/139.cb3686f6.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (key) => startsAsVariableToken(key) && singleCssVariableRegex.test(key);\nconst singleCssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)$/i;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\nconst complexRegex = /(var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\))|(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))|((-)?([\\d]*\\.?[\\d])+)/gi;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const matchedValues = originalValue.match(complexRegex) || [];\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    for (let i = 0; i < matchedValues.length; i++) {\n        const parsedValue = matchedValues[i];\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n    }\n    const tokenised = originalValue.replace(complexRegex, SPLIT_TOKEN);\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { mix } from '../../../utils/mix/index.mjs';\nimport { pipe } from '../../../utils/pipe.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.6\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.6\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.6 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, isMounted) {\n        const origin = getOrigin(target, transition || {}, this);\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","schedule","microtask","cancel","cancelMicrotask","createRenderBatcher","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","useIsomorphicLayoutEffect","postRender","render","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","arguments","length","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","getValueAsType","type","transform","clamp","min","max","number","parse","parseFloat","alpha","scale","default","sanitize","Math","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","transformName","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","frame","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","x1","y1","x2","y2","progress","from","to","toFromDifference","mixNumber","hueToRgb","q","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","color","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","matchedValues","indexes","var","types","parsedValue","push","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","warning","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","now","clearTime","time","frameData","isProcessing","MotionGlobalConfig","useManualTiming","timestamp","performance","newTime","frameloopDriver","passTimestamp","stop","cancelFrame","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","decay","tween","percentToProgress","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","skipAnimations","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","add","isNumericalString","addUniqueItem","item","removeItem","index","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","clear","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}